image: docker:stable

stages:
  - build-base
  - build-test
  - linting
  - testing

variables:
  BASE_IMAGE: $CI_REGISTRY_IMAGE:campus_edx_extensions-campus_edx_extensions
  TEST_IMAGE: $CI_REGISTRY_IMAGE:campus_edx_extensions-campus_edx_extensions-test
  STYLELINTRC_PATH: https://raw.githubusercontent.com/raccoongang/frontend/master/.stylelintrc

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

services:
  - docker:stable-dind

build-base:
  stage: build-base
  script:
    - docker pull $BASE_IMAGE || true
    - docker build --cache-from $BASE_IMAGE -t $BASE_IMAGE --target=base-image .
    - docker push $BASE_IMAGE
  resource_group: build
  only:
    refs:
      - main
      - merge_requests
    changes:
      - Dockerfile
      - .gitlab-ci.yml

build-test:
  stage: build-test
  script:
    - docker pull $BASE_IMAGE
    - docker pull $TEST_IMAGE || true
    - docker build --cache-from $BASE_IMAGE --cache-from $TEST_IMAGE -t $TEST_IMAGE --target=test-image .
    - docker push $TEST_IMAGE
  resource_group: build
  only:
    refs:
      - main
      - merge_requests
    changes:
      - Dockerfile
      - requirements/test.txt
      - .gitlab-ci.yml

.test:
  stage: testing
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $TEST_IMAGE
  only:
    - main
    - merge_requests

pytest:
  extends: .test
  script:
    - docker run --rm -v ${PWD}:/app $TEST_IMAGE make python-test
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    reports:
      cobertura: coverage.xml

quality:
  extends: .test
  stage: linting
  script:
    - docker run --rm -v ${PWD}:/app $TEST_IMAGE make quality

stylelint:
  stage: linting
  image: pipelinecomponents/stylelint:0.9.0
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - curl $STYLELINTRC_PATH > .stylelintrc
  script:
    - stylelint '**/*.scss' --config .stylelintrc --allow-empty-input
  only:
    - main
    - merge_requests
